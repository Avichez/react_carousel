{"version":3,"sources":["components/Carousel/Carousel.tsx","components/CarouselPanel/CarouselPanel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","positionX","imageGap","nextSlideImage","props","options","itemWidth","step","frameSize","infinite","limitPosition","newPosition","setState","prevSlideImage","this","images","animationDuration","length","containerWidth","fullWidth","className","style","width","gap","transform","transition","map","image","index","src","alt","type","onClick","disabled","Component","CarouselPanel","changeOptions","htmlFor","id","value","min","max","onChange","e","currentTarget","checked","PureComponent","App","newProp","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d57683ab.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { Options } from '../../types/options';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  options: Options,\n};\n\ntype State = {\n  positionX: number,\n  imageGap: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    positionX: 0,\n    imageGap: 10,\n  };\n\n  nextSlideImage = () => {\n    const {\n      itemWidth,\n      step,\n      frameSize,\n      infinite,\n    } = this.props.options;\n    const { imageGap } = this.state;\n    const limitPosition = -(itemWidth + imageGap) * (10 - frameSize);\n    let newPosition = this.state.positionX - ((itemWidth + imageGap) * step);\n\n    if (infinite && newPosition < limitPosition) {\n      newPosition = 0;\n    }\n\n    this.setState({\n      positionX: newPosition < limitPosition\n        ? limitPosition\n        : newPosition,\n    });\n  };\n\n  prevSlideImage = () => {\n    const {\n      itemWidth,\n      step,\n      infinite,\n      frameSize,\n    } = this.props.options;\n    const { imageGap } = this.state;\n    const limitPosition = -(itemWidth + imageGap) * (10 - frameSize);\n    let newPosition = this.state.positionX + ((itemWidth + imageGap) * step);\n\n    if (infinite && newPosition > 0) {\n      newPosition = limitPosition;\n    }\n\n    this.setState({\n      positionX: newPosition > 0\n        ? 0\n        : newPosition,\n    });\n  };\n\n  render() {\n    const { positionX, imageGap } = this.state;\n    const { images, options } = this.props;\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = options;\n    const limitPosition = -(itemWidth + imageGap)\n      * (images.length - frameSize);\n    const containerWidth = frameSize * itemWidth + (imageGap * (frameSize - 1));\n    const fullWidth = (itemWidth + imageGap) * images.length;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${containerWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            gap: `${imageGap}px`,\n            width: `${fullWidth}px`,\n            transform: `translateX(${positionX}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`smile number ${index + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"button is-link is-rounded\"\n            type=\"button\"\n            onClick={this.prevSlideImage}\n            disabled={infinite ? false : positionX === 0}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-arrow-left\" />\n            </span>\n          </button>\n          <button\n            className=\"button is-link is-rounded\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.nextSlideImage}\n            disabled={infinite ? false : positionX === limitPosition}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-arrow-right\" />\n            </span>\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { NewOptions } from '../../types/newOptions';\nimport { Options } from '../../types/options';\nimport './CarouselPanel.scss';\n\ntype Props = {\n  options: Options,\n  changeOptions: (value: NewOptions) => void,\n};\n\nexport class CarouselPanel extends PureComponent<Props> {\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props.options;\n    const { changeOptions } = this.props;\n\n    return (\n      <div className=\"CarouselPanel\">\n        <form className=\"box\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"stepId\">\n              Step:\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input is-primary\"\n                id=\"stepId\"\n                type=\"number\"\n                value={step}\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                onChange={(e) => changeOptions({\n                  step: +e.currentTarget.value,\n                })}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"itemId\">\n              Image Size:\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input is-primary\"\n                id=\"itemId\"\n                type=\"number\"\n                value={itemWidth}\n                min=\"130\"\n                max=\"400\"\n                step=\"5\"\n                onChange={(e) => changeOptions({\n                  itemWidth: +e.currentTarget.value,\n                })}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"frameId\">\n              Frame size:\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input is-primary\"\n                id=\"frameId\"\n                type=\"number\"\n                value={frameSize}\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                onChange={(e) => changeOptions({\n                  frameSize: +e.currentTarget.value,\n                })}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"animation-duration\">\n              Animation duration:\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input is-primary\"\n                id=\"animation-duration\"\n                type=\"number\"\n                value={animationDuration}\n                min=\"500\"\n                max=\"5000\"\n                step=\"100\"\n                onChange={(e) => changeOptions({\n                  animationDuration: +e.currentTarget.value,\n                })}\n              />\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <input\n              className=\"infinite-checkbox\"\n              id=\"infinite-checkbox\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={() => changeOptions({\n                infinite: !infinite,\n              })}\n            />\n            <label className=\"checkbox\" htmlFor=\"infinite-checkbox\">\n              Infinite\n            </label>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport { Carousel } from './components/Carousel';\nimport { CarouselPanel } from './components/CarouselPanel';\nimport { NewOptions } from './types/newOptions';\nimport { Options } from './types/options';\n\ninterface State {\n  images: string[];\n  options: Options;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    options: {\n      step: 3,\n      frameSize: 3,\n      itemWidth: 130,\n      animationDuration: 1000,\n      infinite: false,\n    },\n  };\n\n  changeOptions = (newProp: NewOptions) => {\n    this.setState(prevState => ({\n      options: {\n        ...prevState.options,\n        ...newProp,\n      },\n    }));\n  };\n\n  render() {\n    const { images, options } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"title is-2\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel images={images} options={options} />\n        <CarouselPanel options={options} changeOptions={this.changeOptions} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}